Write an SQL code block
Borrow(Roll_no, Name, DateofIssue, NameofBook, Status)
Fine(Roll_no,Date,Amt)
Accept roll_no & name of book from user. Check the number of days (from date of issue), if 
days are between 15 to 30 then fine amount will be Rs 5per day. If no. of days>30, per day fine 
will be Rs 50 per day & for days less than 30, Rs. 5 per day. After submitting the book, status 
will change from I to R. If condition of fine is true, then details will be stored into fine table. 
Also handles the exception by named exception handler or user define exception handler. 

create table borrow(
roll_no int primary key,
name varchar(50),
dateofissue date,
nameofbook varchar(50),
status varchar(50));

create table fine(
roll_no int primary key,
dateofreturn date,
amt int);

insert into borrow values(1,'A','2022-08-15','java','I');
insert into borrow values(2,'A','2022-08-05','cns','I');
insert into borrow values(3,'A','2022-08-01','dbms','I');
insert into borrow values(4,'A','2022-08-01','spos','I');

delimiter $
create procedure fine_calculation(in rno int,bookname varchar(20))
begin
declare issuedate date;
declare diff int;
declare fine_amt int;
declare exit handler for sqlexception select 'Table not Found';
select dateofissue into issuedate from borrow where roll_no=rno and nameofbook=bookname;
select datediff (curdate(),issuedate) into diff;
if (diff>15 and diff<30) then
set fine_amt = diff*5;
insert into fine values(rno, curdate(),fine_amt);
elseif(diff>30) then
set fine_amt = diff*50;
insert into fine values(rno, curdate(),fine_amt);
elseif(diff<15) then
set fine_amt = 0;
insert into fine values(rno, curdate(),fine_amt);
end if;
update borrow set status ='R' where roll_no=rno and nameofbook=bookname;
end;
$


call fine_calculation(3,'dbms');
call fine_calculation(4,'spos');
call fine_calculation(2,'cns');
call fine_calculation(1,'java');

select*from fine;
select*from borrow;